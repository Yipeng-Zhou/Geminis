<launch>
  <arg name="corrupt_state_estimate" default="true" />
  
  <include file="$(find simulation)/launch/unity_ros.launch" >
  </include>

  <node name="Simulation" pkg="simulation" type="Two_Drones.x86_64"/>

  <group ns="Quadrotor_1">
    <!-- state est for quadrotor 1 -->
    <node pkg="simulation"
          type="state_estimate_corruptor_node"
          name="state_estimate_corruptor"
          output="screen">

      <!-- random-walk drift factor (grows with distance traveled) (sigma / m) -->
      <param if="$(arg corrupt_state_estimate)"     name="drift_rw_factor" value="0.03"/>
      <param unless="$(arg corrupt_state_estimate)" name="drift_rw_factor" value="0.0"/>

      <!-- independent white noise -->
      <param if="$(arg corrupt_state_estimate)"     name="pos_white_sig" value="0.005"/>
      <param unless="$(arg corrupt_state_estimate)" name="pos_white_sig" value="0.0"/>

      <!-- average number of seconds between jumps/drift updates -->
      <param if="$(arg corrupt_state_estimate)"     name="jump_seconds" value="20.0"/>
      <param unless="$(arg corrupt_state_estimate)" name="jump_seconds" value="-1.0"/>
    </node>

    <node name="w_to_unity" pkg="simulation" type="w_to_unity"/>

    
    <!-- depth image to point cloud -->
    <node pkg="nodelet" type="nodelet" name="nodelet_manager" args="manager" />
    
    <!-- depth image to point cloud for quadrotor 1 itself -->
    <node pkg="nodelet" type="nodelet" name="depth_pc_quadrotor"
          args="load depth_image_proc/point_cloud_xyz nodelet_manager">
        <remap from="camera_info"   to="/Quadrotor_1/unity_ros/Quadrotor/Sensors/DepthCamera/camera_info"/>
        <remap from="image_rect"    to="/Quadrotor_1/unity_ros/Quadrotor/Sensors/DepthCamera/image_raw"/>
        <remap from="points"        to="/Quadrotor_1/points"/>
    </node>
    
    <!-- depth image to point cloud for whole points -->
    <node pkg="nodelet" type="nodelet" name="depth_pc_merge"
          args="load depth_image_proc/point_cloud_xyz nodelet_manager">
        <remap from="camera_info"   to="/Quadrotor_1/unity_ros/Quadrotor/Sensors/DepthCamera/camera_info"/>
        <remap from="image_rect"    to="/Quadrotor_1/unity_ros/Quadrotor/Sensors/DepthCamera/image_raw"/>
        <remap from="points"        to="/points"/>
    </node>


    <node pkg="controller_pkg" type="traj_publisher" name="traj_publisher" />

    <node pkg="controller_pkg" type="controller_node" name="controller_node" />

    <!-- move base node for Quadrotor_1 -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
      <rosparam file="$(find simulation)/param/costmap_common_params.yaml"  command="load" ns="global_costmap" /> 
      <rosparam file="$(find simulation)/param/costmap_common_params.yaml"  command="load" ns="local_costmap" />
      <rosparam file="$(find simulation)/param/local_costmap_params.yaml"   command="load" />
      <rosparam file="$(find simulation)/param/global_costmap_params.yaml"  command="load" /> 
      <rosparam file="$(find simulation)/param/base_local_planner_params.yaml" command="load" />
      <rosparam file="$(find simulation)/param/global_planner_params.yaml"  command="load" />

      <param name="base_global_planner" value="navfn/NavfnROS" />
      <param name="planner_frequency"   value="3.0" />
      <param name="planner_patience"    value="3.0" />

      <param name="controller_frequency" value="5.0" />

      <remap from="cmd_vel"   to="/Quadrotor_1/cmd_vel"/>
      <remap from="move_base" to="/Quadrotor_1/move_base"/>
    </node>

    <!-- frame transfer between Depth camera to Quadrotor_1 -->
    <node pkg="tf2_ros" type="static_transform_publisher"
        name="depth_camera_frame_to_quadrotor"
        args="0 0 0 -1.57079632 0 -1.57079632 /Quadrotor_1 /Quadrotor/Sensors/DepthCamera" />


    <node pkg="controller_pkg" type="back_navigation_1" name="back_navigation" />

  </group>

  

  <group ns="Quadrotor_2">

    <!-- state est for quadrotor 2 -->
    <node pkg="simulation"
          type="state_estimate_corruptor_node_2"
          name="state_estimate_corruptor"
          output="screen">

      <!-- random-walk drift factor (grows with distance traveled) (sigma / m) -->
      <param if="$(arg corrupt_state_estimate)"     name="drift_rw_factor" value="0.03"/>
      <param unless="$(arg corrupt_state_estimate)" name="drift_rw_factor" value="0.0"/>

      <!-- independent white noise -->
      <param if="$(arg corrupt_state_estimate)"     name="pos_white_sig" value="0.005"/>
      <param unless="$(arg corrupt_state_estimate)" name="pos_white_sig" value="0.0"/>

      <!-- average number of seconds between jumps/drift updates -->
      <param if="$(arg corrupt_state_estimate)"     name="jump_seconds" value="20.0"/>
      <param unless="$(arg corrupt_state_estimate)" name="jump_seconds" value="-1.0"/>
    </node>


    <node name="w_to_unity" pkg="simulation" type="w_to_unity_2"/>

    <!-- depth image to point cloud -->
    <node pkg="nodelet" type="nodelet" name="nodelet_manager" args="manager" />
    
    <!-- depth image to point cloud for quadrotor 2 itself-->
    <node pkg="nodelet" type="nodelet" name="depth_pc_quadrotor"
          args="load depth_image_proc/point_cloud_xyz nodelet_manager">
        <remap from="camera_info"   to="/Quadrotor_2/unity_ros/Quadrotor2/Sensors/DepthCamera/camera_info"/>
        <remap from="image_rect"    to="/Quadrotor_2/unity_ros/Quadrotor2/Sensors/DepthCamera/image_raw"/>
        <remap from="points"        to="/Quadrotor_2/points"/>
    </node>

    <!-- depth image to point cloud for whole points -->
    <node pkg="nodelet" type="nodelet" name="depth_pc_merge"
          args="load depth_image_proc/point_cloud_xyz nodelet_manager">
        <remap from="camera_info"   to="/Quadrotor_2/unity_ros/Quadrotor2/Sensors/DepthCamera/camera_info"/>
        <remap from="image_rect"    to="/Quadrotor_2/unity_ros/Quadrotor2/Sensors/DepthCamera/image_raw"/>
        <remap from="points"        to="/points"/>
    </node>

    <node pkg="controller_pkg" type="traj_publisher_2" name="traj_publisher" />

    <node pkg="controller_pkg" type="controller_node_2" name="controller_node" />

    <!-- move base node for Quadrotor_2 -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
      <rosparam file="$(find simulation)/param/costmap_common_params_2.yaml"  command="load" ns="global_costmap" /> 
      <rosparam file="$(find simulation)/param/costmap_common_params_2.yaml"  command="load" ns="local_costmap" />
      <rosparam file="$(find simulation)/param/local_costmap_params_2.yaml"   command="load" />
      <rosparam file="$(find simulation)/param/global_costmap_params_2.yaml"  command="load" /> 
      <rosparam file="$(find simulation)/param/base_local_planner_params_2.yaml" command="load" />
      <rosparam file="$(find simulation)/param/global_planner_params_2.yaml"  command="load" />

      <param name="base_global_planner" value="navfn/NavfnROS" />
      <param name="planner_frequency"   value="3.0" />
      <param name="planner_patience"    value="3.0" />

      <param name="controller_frequency" value="5.0" />

      <!-- topic remap -->
      <remap from="cmd_vel"   to="/Quadrotor_2/cmd_vel"/>
      <remap from="move_base" to="/Quadrotor_2/move_base"/>
    </node>

    <node pkg="controller_pkg" type="back_navigation_2" name="back_navigation" />


    <!-- frame transfer between Depth camera to Quadrotor_2 -->
    <node pkg="tf2_ros" type="static_transform_publisher"
        name="depth_camera_frame_to_quadrotor"     
        args="0 0 0 -1.57079632 0 -1.57079632 /Quadrotor_2 /Quadrotor2/Sensors/DepthCamera" />

  </group>



  <!-- octomap for quadrotor 1 & 2 -->
  <node pkg="octomap_server" type="octomap_server_node" name="octomap_server">

    <!-- resolution in meters per pixel -->
    <param name="resolution" value="0.5" />

    <!-- name of the fixed frame, needs to be "/map" for SLAM -->
    <param name="frame_id"      type="string" value="world" />
    <param name="base_frame_id" type="string" value="Quadrotor_1" />
    <param name="sensor_model/max_range"      value="12.0" /> 
    <param name="occupancy_min_z"             value="1.0" /> 
    <param name="occupancy_max_z"             value="2.5" /> 

    <remap from="/cloud_in" to="/points" />

    <!-- default is projected_map
    <remap from="/projected_map" to="/Quadrotor_1/projected_map" /> -->

  </node>


  <node pkg="state_machine_pkg" type="state_machine.py" name="state_machine" />

  <node pkg="smach_viewer" type="smach_viewer.py" name="smach_viewer" />

  <!-- <node pkg="map_stack" type="map_stack" name="map_stack" /> -->


  <!-- automatically start rviz -->
  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find simulation)/rviz/name.rviz" />

  <node pkg="explore_lite" type="explore_1" respawn="false" name="explore_1" output="screen">
    <param name="robot_base_frame"  value="/Quadrotor_1"/>
    <param name="costmap_topic"     value="/projected_map"/>
    <param name="visualize"         value="true"/>
    <param name="planner_frequency" value="1.0"/>
    <param name="progress_timeout"  value="2.0"/>
    <param name="potential_scale"   value="8.0"/>
    <param name="orientation_scale" value="0.0"/>
    <param name="gain_scale"        value="0.0"/>
    <param name="transform_tolerance" value="0.3"/>
    <param name="min_frontier_size" value="1.0"/>

    <!-- <remap from="/move_base_1/"        to="/Quadrotor_1/move_base"/>
    <remap from="/move_base_2/"        to="/Quadrotor_2/move_base"/> -->

  </node>

  <node pkg="explore_lite" type="explore_2" respawn="false" name="explore_2" output="screen">
    <param name="robot_base_frame"  value="/Quadrotor_2"/>
    <param name="costmap_topic"     value="/projected_map"/>
    <param name="visualize"         value="true"/>
    <param name="planner_frequency" value="1.0"/>
    <param name="progress_timeout"  value="2.0"/>
    <param name="potential_scale"   value="8.0"/>
    <param name="orientation_scale" value="0.0"/>
    <param name="gain_scale"        value="0.0"/>
    <param name="transform_tolerance" value="0.3"/>
    <param name="min_frontier_size" value="1.0"/>

    <!-- <remap from="/move_base_1/"        to="/Quadrotor_1/move_base"/>
    <remap from="/move_base_2/"        to="/Quadrotor_2/move_base"/> -->

  </node>


</launch>
